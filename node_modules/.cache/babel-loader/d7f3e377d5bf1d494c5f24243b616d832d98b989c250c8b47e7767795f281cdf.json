{"ast":null,"code":"import ActionTypes from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  carts: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ActionTypes.ADD_TO_CART:\n      if (state.numberCart === 0) {\n        let item = {\n          ...payload,\n          quantity: 1\n        };\n        state.carts.push(item);\n      } else {\n        let check = false;\n        state.carts.map((item, index) => {\n          if (item.id === payload.id) {\n            check = true;\n            state.carts[index].quantiy + 1;\n          }\n        });\n        if (!check) {\n          let _item = {\n            ...payload,\n            quantity: 1\n          };\n          state.carts.push(_item);\n        }\n      }\n      return {\n        ...state,\n        numberCart: state.numberCart + 1\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","carts","cartReducer","state","arguments","length","undefined","type","payload","ADD_TO_CART","item","quantity","push","check","map","index","id","quantiy","_item"],"sources":["/home/yash/Documents/ReactJs/MidTerm/shoplane/src/redux/reducers/cart-reducer.js"],"sourcesContent":["import ActionTypes from \"../constants/action-types\";\n\nconst initialState = {\n    numberCart: 0,\n    carts: []\n}\n\nexport const cartReducer = (state = initialState, {type, payload}) => {\n    switch (type) {\n        case ActionTypes.ADD_TO_CART:\n            if(state.numberCart===0){\n                let item = {\n                    ...payload,\n                    quantity: 1\n                };\n                state.carts.push(item);\n            }else{\n                let check = false;\n                state.carts.map((item, index) => {\n                    if(item.id === payload.id){\n                        check = true;\n                        state.carts[index].quantiy+1;\n                    }\n                });\n                if(!check){\n                    let _item = {\n                        ...payload,\n                        quantity:1\n                    }\n                    state.carts.push(_item);\n                }\n            }\n            return {\n                ...state,\n                numberCart: state.numberCart + 1\n            };\n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,2BAA2B;AAEnD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA2C;EAAA,IAA1CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAE;IAACQ,IAAI;IAAEC;EAAO,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7D,QAAQC,IAAI;IACR,KAAKT,WAAW,CAACW,WAAW;MACxB,IAAGN,KAAK,CAACH,UAAU,KAAG,CAAC,EAAC;QACpB,IAAIU,IAAI,GAAG;UACP,GAAGF,OAAO;UACVG,QAAQ,EAAE;QACd,CAAC;QACDR,KAAK,CAACF,KAAK,CAACW,IAAI,CAACF,IAAI,CAAC;MAC1B,CAAC,MAAI;QACD,IAAIG,KAAK,GAAG,KAAK;QACjBV,KAAK,CAACF,KAAK,CAACa,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,KAAK;UAC7B,IAAGL,IAAI,CAACM,EAAE,KAAKR,OAAO,CAACQ,EAAE,EAAC;YACtBH,KAAK,GAAG,IAAI;YACZV,KAAK,CAACF,KAAK,CAACc,KAAK,CAAC,CAACE,OAAO,GAAC,CAAC;UAChC;QACJ,CAAC,CAAC;QACF,IAAG,CAACJ,KAAK,EAAC;UACN,IAAIK,KAAK,GAAG;YACR,GAAGV,OAAO;YACVG,QAAQ,EAAC;UACb,CAAC;UACDR,KAAK,CAACF,KAAK,CAACW,IAAI,CAACM,KAAK,CAAC;QAC3B;MACJ;MACA,OAAO;QACH,GAAGf,KAAK;QACRH,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAG;MACnC,CAAC;IACL;MACI,OAAOG,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}