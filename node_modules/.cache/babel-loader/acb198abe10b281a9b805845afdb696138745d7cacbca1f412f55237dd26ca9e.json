{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  cart: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ActionTypes.ADD_TO_CART:\n      if (state.numberCart === 0) {\n        let item = {\n          ...payload,\n          quantity: 1\n        };\n        state.carts.push(item);\n      } else {\n        let check = false;\n        state.carts.map((item, index) => {\n          if (item.id === payload.id) {\n            state.carts[index].quantity++;\n            check = true;\n          }\n        });\n        if (!check) {\n          let item = {\n            ...payload,\n            quantity: 1\n          };\n          state.carts.push(item);\n        }\n      }\n      return {\n        state,\n        numberCart: state.numberCart + 1\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","cart","cartReducer","state","arguments","length","undefined","type","payload","ADD_TO_CART","item","quantity","carts","push","check","map","index","id"],"sources":["/home/yash/Documents/ReactJs/MidTerm/attempt2/shoplane/src/redux/reducers/cart-reducer.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\";\n\nconst initialState = {\n    numberCart: 0,\n    cart: []\n}\n\nexport const cartReducer =(state = initialState, {type, payload}) => {\n    switch(type){\n        case ActionTypes.ADD_TO_CART:\n            if(state.numberCart === 0){\n                let item = {\n                    ...payload,\n                    quantity: 1\n                };\n                state.carts.push(item);\n            }else{\n                let check = false;\n                state.carts.map((item, index) => {\n                    if(item.id === payload.id){\n                        state.carts[index].quantity++;\n                        check = true\n                    }\n                });\n                if(!check){\n                    let item = {\n                        ...payload,\n                        quantity: 1\n                    }\n                    state.carts.push(item); \n                }\n            }\n            return {\n                state,\n                numberCart: state.numberCart + 1\n            }    \n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AAEvD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,WAAW,GAAE,SAAAA,CAAA,EAA2C;EAAA,IAA1CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAE;IAACQ,IAAI;IAAEC;EAAO,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC5D,QAAOC,IAAI;IACP,KAAKT,WAAW,CAACW,WAAW;MACxB,IAAGN,KAAK,CAACH,UAAU,KAAK,CAAC,EAAC;QACtB,IAAIU,IAAI,GAAG;UACP,GAAGF,OAAO;UACVG,QAAQ,EAAE;QACd,CAAC;QACDR,KAAK,CAACS,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;MAC1B,CAAC,MAAI;QACD,IAAII,KAAK,GAAG,KAAK;QACjBX,KAAK,CAACS,KAAK,CAACG,GAAG,CAAC,CAACL,IAAI,EAAEM,KAAK,KAAK;UAC7B,IAAGN,IAAI,CAACO,EAAE,KAAKT,OAAO,CAACS,EAAE,EAAC;YACtBd,KAAK,CAACS,KAAK,CAACI,KAAK,CAAC,CAACL,QAAQ,EAAE;YAC7BG,KAAK,GAAG,IAAI;UAChB;QACJ,CAAC,CAAC;QACF,IAAG,CAACA,KAAK,EAAC;UACN,IAAIJ,IAAI,GAAG;YACP,GAAGF,OAAO;YACVG,QAAQ,EAAE;UACd,CAAC;UACDR,KAAK,CAACS,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;QAC1B;MACJ;MACA,OAAO;QACHP,KAAK;QACLH,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAG;MACnC,CAAC;IACL;MACI,OAAOG,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}